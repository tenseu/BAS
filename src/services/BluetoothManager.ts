import { ref } from 'vue'

export interface ControllerData {
  leftStick: { x: number; y: number }
  rightStick: { x: number; y: number }
  buttons: { [key: string]: boolean }
}

export class BluetoothManager {
  private device: BluetoothDevice | null = null
  private server: BluetoothRemoteGATTServer | null = null
  private characteristic: BluetoothRemoteGATTCharacteristic | null = null

  public isConnected = ref(false)
  public isConnecting = ref(false)
  public error = ref<string | null>(null)

  constructor() {
    console.log('BluetoothManager: –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è (—Ç–µ—Å—Ç–æ–≤—ã–π —Ä–µ–∂–∏–º)')
  }

  public async connect(): Promise<void> {
    console.log('BluetoothManager: –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ (—Ç–µ—Å—Ç–æ–≤—ã–π —Ä–µ–∂–∏–º)‚Ä¶')
    this.isConnecting.value = true
    this.error.value = null

    try {
      // –∏–º–∏—Ç–∞—Ü–∏—è –≤—ã–±–æ—Ä–∞ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞
      this.device = { name: 'Mock DroneController' } as BluetoothDevice
      this.server = null
      this.characteristic = null

      // –æ—Ç–º–µ—á–∞–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ
      this.isConnected.value = true

      // –∑–µ–ª—ë–Ω—ã–π –ª–æ–≥
      console.log('%c‚úÖ –°–æ–ø—Ä—è–∂–µ–Ω–∏–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ', 'color: limegreen; font-weight: bold;')
    } catch (err) {
      console.error('–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è (—Ç–µ—Å—Ç):', err)
      this.error.value = err instanceof Error ? err.message : String(err)
      throw err
    } finally {
      this.isConnecting.value = false
    }
  }

  public async disconnect(): Promise<void> {
    this.device = null
    this.server = null
    this.characteristic = null
    this.isConnected.value = false
    console.log('üîå –û—Ç–∫–ª—é—á–µ–Ω–æ (—Ç–µ—Å—Ç–æ–≤—ã–π —Ä–µ–∂–∏–º)')
  }

  private onDisconnected = () => {
    console.warn('–£—Å—Ç—Ä–æ–π—Å—Ç–≤–æ –æ—Ç–∫–ª—é—á–µ–Ω–æ (—Ç–µ—Å—Ç)')
    this.isConnected.value = false
    this.error.value = '–£—Å—Ç—Ä–æ–π—Å—Ç–≤–æ –æ—Ç–∫–ª—é—á–µ–Ω–æ'
  }

  public async sendData(data: ControllerData): Promise<void> {
    if (!this.isConnected.value) {
      console.warn('–ù–µ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è (—Ç–µ—Å—Ç–æ–≤—ã–π —Ä–µ–∂–∏–º)')
      return
    }

    const json = JSON.stringify(data)
    console.log('üì§ –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ (–∏–º–∏—Ç–∞—Ü–∏—è):', json)
  }
}
